/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vistas;

import entidades.Inscripcion;
import entidades.Materia;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.InscripcionData;
import persistencia.MateriaData;

public class friConsultas extends javax.swing.JInternalFrame {

    private MateriaData materiaData;
    private ArrayList<Materia> materias;
    private DefaultTableModel modelo;
    private InscripcionData insData;

    public friConsultas() {

        initComponents();
        insData = new InscripcionData();
        modelo = new DefaultTableModel();
        materiaData = new MateriaData();
        materias = new ArrayList();
        materias = (ArrayList) materiaData.listarMaterias();
        cargarCombo();
        cabecera();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ComMateria = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabla = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();

        setClosable(true);
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        jPanel1.setBackground(new java.awt.Color(34, 39, 46));
        jPanel1.setForeground(new java.awt.Color(173, 186, 199));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(173, 186, 199));
        jLabel1.setText("Listado de alumnos por materia");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(173, 186, 199));
        jLabel2.setText("Materias");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 200, 30));

        ComMateria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComMateriaItemStateChanged(evt);
            }
        });
        ComMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComMateriaActionPerformed(evt);
            }
        });
        jPanel1.add(ComMateria, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 300, 30));

        jTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTabla);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 720, 360));

        btnSalir.setBackground(new java.awt.Color(34, 39, 46));
        btnSalir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(173, 186, 199));
        btnSalir.setText("Salir");
        btnSalir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSalir.setContentAreaFilled(false);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 500, 100, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComMateriaActionPerformed
        cargarTabla();
    }//GEN-LAST:event_ComMateriaActionPerformed

    private void ComMateriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComMateriaItemStateChanged
        //cargarTabla();
    }//GEN-LAST:event_ComMateriaItemStateChanged

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();

    }//GEN-LAST:event_btnSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Materia> ComMateria;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabla;
    // End of variables declaration//GEN-END:variables

    private void cargarCombo() {
        ComMateria.addItem(null);
        materias = (ArrayList) materiaData.listarMaterias();
        for (Materia materia : materias) {
            ComMateria.addItem(materia);

        }
    }

    private void cabecera() {
        ArrayList<Object> columnas = new ArrayList();
        columnas.add("ID");
        columnas.add("Nombre");
        columnas.add("Apellido");
        columnas.add("DNI");
        columnas.add("Fecha de nacimiento");
        for (Object ob : columnas) {
            modelo.addColumn(ob);
        }
        jTabla.setModel(modelo);
    }

    private void cargarTabla() {
        borrarFilasTabla();
        Materia selec = new Materia();
        selec = (Materia) ComMateria.getSelectedItem();
        if (selec != null) {
            ArrayList<Inscripcion> ins = new ArrayList();
            ins = (ArrayList) insData.obtenerAlumnosInscriptos(selec);
            if (ins.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No hay inscriptos en esta materia");
            }
            for (Inscripcion in : ins) {
                modelo.addRow(new Object[]{
                    in.getAlumno().getIdAlumno(),
                    in.getAlumno().getNombre(),
                    in.getAlumno().getApellido(),
                    in.getAlumno().getDni(),
                    in.getAlumno().getFechaNacimiento().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"))
                });
            }
            jTabla.setModel(modelo);
        }
    }

    private void borrarFilasTabla() {
        if (modelo != null) {
            int a = modelo.getRowCount() - 1;
            for (int i = a; i >= 0; i--) {
                modelo.removeRow(i);
            }
        }
    }
}
