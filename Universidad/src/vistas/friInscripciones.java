/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import entidades.Alumno;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import persistencia.AlumnoData;
import persistencia.InscripcionData;
import persistencia.MateriaData;
import persistencia.MiConexion;

/**
 *
 * @author PUESTO-A1
 */
public class friInscripciones extends javax.swing.JInternalFrame {

    private MiConexion con;
    private AlumnoData aD;
    private List<Alumno> listaAlumnos;
    private InscripcionData insDat;
    private DefaultTableModel modelo;
    MateriaData matData;
    
    public friInscripciones() {
        initComponents();
        con= new MiConexion("jdbc:mysql://localhost/universidad", "root", "");
        aD= new AlumnoData(con);
        listaAlumnos=aD.listarAlumnos();
        modelo= new DefaultTableModel();
        matData= new MateriaData(con);
        cargarAlumnos();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlFormularioInscripcion = new javax.swing.JLabel();
        jlListadoMaterias = new javax.swing.JLabel();
        cbAlumnos = new javax.swing.JComboBox<>();
        jlAlumno = new javax.swing.JLabel();
        rbNoInscriptas = new javax.swing.JRadioButton();
        rbInscriptas = new javax.swing.JRadioButton();
        btAnularInscripcion = new javax.swing.JButton();
        btInscribir = new javax.swing.JButton();
        btSalir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtMaterias = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(34, 39, 46));
        jPanel1.setForeground(new java.awt.Color(173, 186, 199));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlFormularioInscripcion.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jlFormularioInscripcion.setForeground(new java.awt.Color(173, 186, 199));
        jlFormularioInscripcion.setText("Formulario de inscripci√≥n");
        jPanel1.add(jlFormularioInscripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, -1, -1));

        jlListadoMaterias.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jlListadoMaterias.setForeground(new java.awt.Color(173, 186, 199));
        jlListadoMaterias.setText("Listado de materias");
        jPanel1.add(jlListadoMaterias, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, 160, 30));

        cbAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAlumnosActionPerformed(evt);
            }
        });
        jPanel1.add(cbAlumnos, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, 290, 30));

        jlAlumno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jlAlumno.setForeground(new java.awt.Color(173, 186, 199));
        jlAlumno.setText("Alumno");
        jPanel1.add(jlAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 70, 30));

        rbNoInscriptas.setBackground(new java.awt.Color(34, 39, 46));
        rbNoInscriptas.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rbNoInscriptas.setForeground(new java.awt.Color(173, 186, 199));
        rbNoInscriptas.setText("No Inscriptas");
        rbNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNoInscriptasActionPerformed(evt);
            }
        });
        jPanel1.add(rbNoInscriptas, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, -1, -1));

        rbInscriptas.setBackground(new java.awt.Color(34, 39, 46));
        rbInscriptas.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rbInscriptas.setForeground(new java.awt.Color(173, 186, 199));
        rbInscriptas.setText("Inscriptas");
        rbInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbInscriptasActionPerformed(evt);
            }
        });
        jPanel1.add(rbInscriptas, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 170, -1, -1));

        btAnularInscripcion.setBackground(new java.awt.Color(34, 39, 46));
        btAnularInscripcion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btAnularInscripcion.setForeground(new java.awt.Color(173, 186, 199));
        btAnularInscripcion.setText("Anular Inscripcion");
        btAnularInscripcion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btAnularInscripcion.setContentAreaFilled(false);
        btAnularInscripcion.setEnabled(false);
        btAnularInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnularInscripcionActionPerformed(evt);
            }
        });
        jPanel1.add(btAnularInscripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 330, 140, 30));

        btInscribir.setBackground(new java.awt.Color(34, 39, 46));
        btInscribir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btInscribir.setForeground(new java.awt.Color(173, 186, 199));
        btInscribir.setText("Inscribir");
        btInscribir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btInscribir.setContentAreaFilled(false);
        btInscribir.setEnabled(false);
        jPanel1.add(btInscribir, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, 100, 30));

        btSalir.setBackground(new java.awt.Color(34, 39, 46));
        btSalir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btSalir.setForeground(new java.awt.Color(173, 186, 199));
        btSalir.setText("Salir");
        btSalir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btSalir.setContentAreaFilled(false);
        btSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 330, 70, 30));

        jtMaterias.setAutoCreateRowSorter(true);
        jtMaterias.setBackground(new java.awt.Color(34, 39, 46));
        jtMaterias.setForeground(new java.awt.Color(34, 39, 46));
        jtMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtMaterias);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 530, 120));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
                                           
                                        

    private void rbNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNoInscriptasActionPerformed
        rbInscriptas.setSelected(false);
        btInscribir.setEnabled(true);
        btAnularInscripcion.setEnabled(false);
    }//GEN-LAST:event_rbNoInscriptasActionPerformed

    private void rbInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbInscriptasActionPerformed
        rbNoInscriptas.setSelected(false);
        btAnularInscripcion.setEnabled(true);
        btInscribir.setEnabled(false);
        
        
    }//GEN-LAST:event_rbInscriptasActionPerformed

    private void btSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btSalirActionPerformed

    private void cbAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAlumnosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbAlumnosActionPerformed

    private void btAnularInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnularInscripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btAnularInscripcionActionPerformed
    private void cargarAlumnos(){
        for (Alumno lista: listaAlumnos ) {
            cbAlumnos.addItem(lista);
            
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnularInscripcion;
    private javax.swing.JButton btInscribir;
    private javax.swing.JButton btSalir;
    private javax.swing.JComboBox<Alumno> cbAlumnos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlAlumno;
    private javax.swing.JLabel jlFormularioInscripcion;
    private javax.swing.JLabel jlListadoMaterias;
    private javax.swing.JTable jtMaterias;
    private javax.swing.JRadioButton rbInscriptas;
    private javax.swing.JRadioButton rbNoInscriptas;
    // End of variables declaration//GEN-END:variables

//    public void cargarAlumnos(){
//        listaAlumnos = new AlumnoData();
//    }

    private void borrarFilasTabla() {
        if (modelo != null) {
            int a = modelo.getRowCount() - 1;

            for (int i = a; i >= 0; i--) {
                modelo.removeRow(i);
            }
        }
        //modelo.setNumRows(0);
    }
    
    private void armarCabeceraTabla() {
        //titulos de las columnas
        ArrayList<Object> columnas = new ArrayList<Object>();
        columnas.add("ID");
        columnas.add("Nombre");
        columnas.add("A√±o");
        //recorro el array y uso eso de titulos
        for (Object it : columnas) {
            modelo.addColumn(it);
        }
        //se lo cargo a la tabla
        tbInscripciones.setModel(modelo);

    }
    private void cargarTablaNoInscripta(){
        borrarFilasTabla();
        Alumno elegido= (Alumno) cbAlumnos.getSelectedItem();
        if(elegido!=null){
           ArrayList<Materia> listaMateria= (ArrayList)inscripcionData.obtenerMateriasNoInscriptas(elegido);
            for (Materia materia : listaMateria) {
                modelo.addRow(new Object[]{ materia.getIdMateria(),materia.getNombre(),materia.getPeriodo()});
                
            }
        }else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar un alumno");
        }
        
    }
    private void cargarTablaInscripta(){
        borrarFilasTabla();
         Alumno elegido= (Alumno) cbAlumnos.getSelectedItem();
        if(elegido!=null){
           ArrayList<Materia> listaMateria= (ArrayList)inscripcionData.obtenerMateriasInscriptas(elegido);
            for (Materia materia : listaMateria) {
                modelo.addRow(new Object[]{ materia.getIdMateria(),materia.getNombre(),materia.getPeriodo()});
                
            }
    }else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar un alumno");
        }
    }
    private void cargaComboBox() {
       Collections.sort(alumnos, new Comparator<Alumno>() {
           @Override
           public int compare(Alumno o1, Alumno o2) {
               return o1.getApellido().compareTo(o2.getApellido());
           }
       });
        for (Alumno alumno : alumnos) {
            cbAlumnos.addItem(alumno);
            
        }
        
    }

    
}
